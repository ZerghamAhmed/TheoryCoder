Human: 
You are an AI agent that must come up with a list of actions that need to be taken to win a certain level in a game. 
These actions can only come from the action space given below. You are given an example of what your response 
format for this list of actions should look like. 

You are given your current state that you start from in the level as well as the goal to win.

You previously attemped this level and returned the following action sequences but did not win the game. 
The history of your previous action sequence predictions and the corresponding replay buffer for that sequence is given 
under history.

Please provide your corrected action sequence that will result in winning the level. 
Do not forget to give your explanation for why this is now correct. 

DESCRIPTION OF DOMAIN:

This domain is a game where you move around a red agent but cannot move onto walls. 

You need to face in the direction of an item
and stand one square adjacent from it in order to pick it up and have it in your inventory. You can only hold one item at a time.
You can pickup boxes, balls, keys. 

Doors can be opened in this game by standing adjacent one square from them and facing towards them.
Once a door is opened you can stand on the same position as it and move past it. 

You can open locked doors by having the corresponding color key for that door. Once you use the key to unlock the door,
the key will remain in your inventory.

Once a door is opened it will remain on the map and be an opened_ door.

For example, consider a map where there is a closed_red_door (this means its not locked). 
When you toggle it, it will turn into an open_red_door

You may also encounter a locked_red_door and when you toggle it with a key in your inventory it'll become an open_red_door

If you choose to drop an item from your inventory you will drop it in the position right in front of you in the direction you are facing.
You cannot drop an item in front of you if another item is in that square.

Furthermore, you SHOULD NOT DROP the ITEM any 1 square away from a door way or else it will block it.

Another thing to note is that boxes can be picked up AND they can also be toggled. If you toggle a box, the corresponding
color key will appear in that square and the box will be removed from the state.

For example if you toggle a box, then a key will appear at the same coordinate that the box is at.

However, this ONLY happens when there is a locked door of that color and a key of the same color as the locked door does NOT exist in the state.

Effectively, you can think of the box turning into the corresponding key in a way. 

So for example purple_box at [2, 5] will turn into purple_key at [2, 5] replacing that in that state 

or in other words purple_box will be deleted from the map completely.

purple_box -> purple_key


YOUR OVERALL GOAL TO WIN THIS LEVEL:

open a blue door and open the blue door on your right

ACTION SPACE (YOUR LIST SHOULD BE COMPOSED OF THESE ACTIONS):

['left', 'right', 'forward', 'pickup', 'drop', 'toggle']

INITIAL STATE FOR LEVEL:

{'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[7, 1]], 'agent_direction': [-1, 0], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}

HISTORY:

**Previous Actions 1 and its replay buffer:**

Actions:
['forward', 'forward', 'right', 'forward', 'left', 'toggle']

Replay Buffer:
Initial state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[7, 1]], 'agent_direction': [-1, 0], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Action: forward
Next state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 1]], 'agent_direction': [-1, 0], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Summary of changes:
"red_agent": [[7, 1]] --> [[6, 1]]


Initial state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 1]], 'agent_direction': [-1, 0], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Action: forward
Next state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 1]], 'agent_direction': [-1, 0], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Summary of changes:


Initial state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 1]], 'agent_direction': [-1, 0], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Action: right
Next state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 1]], 'agent_direction': [0, 1], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Summary of changes:
"agent_direction": [-1, 0] --> [0, 1]


Initial state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 1]], 'agent_direction': [0, 1], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Action: forward
Next state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 2]], 'agent_direction': [0, 1], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Summary of changes:
"red_agent": [[6, 1]] --> [[6, 2]]


Initial state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 2]], 'agent_direction': [0, 1], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Action: left
Next state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 2]], 'agent_direction': [-1, 0], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Summary of changes:
"agent_direction": [0, 1] --> [-1, 0]


Initial state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 2]], 'agent_direction': [-1, 0], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Action: toggle
Next state: {'grey_wall': [[0, 8], [0, 7], [0, 6], [0, 5], [0, 4], [0, 3], [0, 2], [0, 1], [0, 0], [1, 8], [1, 4], [1, 0], [2, 8], [2, 4], [2, 0], [3, 8], [3, 4], [3, 0], [4, 8], [4, 6], [4, 5], [4, 4], [4, 3], [4, 1], [4, 0], [5, 8], [5, 4], [5, 0], [6, 8], [6, 0], [7, 8], [7, 4], [7, 0], [8, 8], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 1], [8, 0]], 'green_ball': [[2, 3], [3, 7], [5, 1]], 'yellow_ball': [[2, 1]], 'purple_box': [[3, 1]], 'closed_blue_door': [[4, 7], [4, 2]], 'red_ball': [[5, 3]], 'closed_purple_door': [[6, 4]], 'grey_key': [[7, 5]], 'red_agent': [[6, 2]], 'agent_direction': [-1, 0], 'agent_carrying': [{'type': 'none', 'color': 'none'}]}
Summary of changes:




UTILS:

{'directions': {'left': [-1, 0], 'right': [1, 0], 'up': [0, 1], 'down': [0, -1]}}

RESPONSE FORMAT (just a random example list, make sure your answer is returned with markup tag, explanations should be outside it):

```Python

["right", "left", "toggle", "forward", "forward", "pickup"]

```

explanation:

Example explanation.

